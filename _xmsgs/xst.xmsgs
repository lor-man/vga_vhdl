<?xml version="1.0" encoding="UTF-8"?>
<!-- IMPORTANT: This is an internal file that has been generated
     by the Xilinx ISE software.  Any direct editing or
     changes made to this file may result in unpredictable
     behavior or data corruption.  It is strongly advised that
     users do not edit the contents of this file. -->
<messages>
<msg type="warning" file="Xst" num="653" delta="new" >Signal &lt;<arg fmt="%s" index="1">ena_16</arg>&gt; is used but never assigned. This sourceless signal will be automatically connected to value <arg fmt="%s" index="2">0</arg>.
</msg>

<msg type="warning" file="Xst" num="646" delta="new" >Signal &lt;<arg fmt="%s" index="1">dato_addr_rom_16</arg>&gt; is assigned but never used. This unconnected signal will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="524" delta="new" >All outputs of the instance &lt;<arg fmt="%s" index="1">Inst_rom_16</arg>&gt; of the block &lt;<arg fmt="%s" index="2">rom_16</arg>&gt; are unconnected in block &lt;<arg fmt="%s" index="3">vga_top</arg>&gt;.
This instance will be removed from the design along with all underlying logic
</msg>

<msg type="info" file="Xst" num="3044" delta="new" >The ROM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as a read-only BLOCK RAM, absorbing the register: &lt;<arg fmt="%s" index="2">DATA</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3225" delta="new" >The RAM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as BLOCK RAM
</msg>

<msg type="info" file="Xst" num="3044" delta="new" >The ROM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as a read-only BLOCK RAM, absorbing the register: &lt;<arg fmt="%s" index="2">DATA</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3225" delta="new" >The RAM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as BLOCK RAM
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3044" delta="new" >The ROM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as a read-only BLOCK RAM, absorbing the register: &lt;<arg fmt="%s" index="2">DATA</arg>&gt;.
</msg>

<msg type="info" file="Xst" num="3225" delta="new" >The RAM &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented as BLOCK RAM
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="info" file="Xst" num="3045" delta="new" >The ROM description &lt;<arg fmt="%s" index="1">Mrom_rdata_rom0000</arg>&gt; will be implemented on LUTs because the limited number of device block RAMs. If you want to be implemented as block RAM, please select a larger device.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">rom_6</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">rom_6</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_0</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">rom_10</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_1</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">rom_10</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_2</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">0</arg> in block &lt;<arg fmt="%s" index="3">rom_10</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_12</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_12</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_13</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_13</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_14</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_14</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1710" delta="new" >FF/Latch &lt;<arg fmt="%s" index="1">DATA_3</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_15</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="warning" file="Xst" num="1895" delta="new" >Due to other FF/Latch trimming, FF/Latch &lt;<arg fmt="%s" index="1">DATA_7</arg>&gt; (without init value) has a constant value of <arg fmt="%d" index="2">1</arg> in block &lt;<arg fmt="%s" index="3">rom_15</arg>&gt;. This FF/Latch will be trimmed during the optimization process.
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_13/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_13/DATA_5&gt; &lt;Inst_rom_13/DATA_4&gt; &lt;Inst_rom_13/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_12/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_12/DATA_5&gt; &lt;Inst_rom_12/DATA_4&gt; &lt;Inst_rom_12/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_15/DATA_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_15/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_14/DATA_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_14/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_15/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_15/DATA_5&gt; &lt;Inst_rom_15/DATA_4&gt; &lt;Inst_rom_15/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_14/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_14/DATA_5&gt; &lt;Inst_rom_14/DATA_4&gt; &lt;Inst_rom_14/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_1&gt; &lt;Inst_rom_3/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_6&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_10/DATA_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_10/DATA_6&gt; &lt;Inst_rom_10/DATA_5&gt; &lt;Inst_rom_10/DATA_4&gt; &lt;Inst_rom_10/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_7/DATA_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_7/DATA_2&gt; &lt;Inst_rom_7/DATA_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2260" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_7/DATA_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg> : <arg fmt="%s" index="4">&lt;Inst_rom_7/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_13/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_13/DATA_5&gt; &lt;Inst_rom_13/DATA_4&gt; &lt;Inst_rom_13/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_12/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_12/DATA_5&gt; &lt;Inst_rom_12/DATA_4&gt; &lt;Inst_rom_12/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_15/DATA_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_15/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_14/DATA_1</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_14/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_15/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_15/DATA_5&gt; &lt;Inst_rom_15/DATA_4&gt; &lt;Inst_rom_15/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_14/DATA_6</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">3 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_14/DATA_5&gt; &lt;Inst_rom_14/DATA_4&gt; &lt;Inst_rom_14/DATA_2&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_2</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_1&gt; &lt;Inst_rom_3/DATA_0&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_3/DATA_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_3/DATA_6&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_10/DATA_7</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">4 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_10/DATA_6&gt; &lt;Inst_rom_10/DATA_5&gt; &lt;Inst_rom_10/DATA_4&gt; &lt;Inst_rom_10/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_7/DATA_4</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">2 FFs/Latches</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_7/DATA_2&gt; &lt;Inst_rom_7/DATA_1&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2261" delta="new" >The FF/Latch &lt;<arg fmt="%s" index="1">Inst_rom_7/DATA_5</arg>&gt; in Unit &lt;<arg fmt="%s" index="2">vga_top</arg>&gt; is equivalent to the following <arg fmt="%s" index="3">FF/Latch</arg>, which will be removed : <arg fmt="%s" index="4">&lt;Inst_rom_7/DATA_3&gt; </arg>
</msg>

<msg type="info" file="Xst" num="2169" delta="new" >HDL ADVISOR - Some clock signals were not automatically buffered by XST with BUFG/BUFR resources. Please use the buffer_type constraint in order to insert these buffers to the clock signals to help prevent skew problems.
</msg>

</messages>

